buildscript {
	ext {
		kotlinVersion = '1.3.0'
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.derekleerock'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

/// Adds sourceSets for a separate integration test suite.
/// This allows us to separate our unit tests from our integration tests.
/// Guidance taken from the following blog: https://bit.ly/2PgKIJK
sourceSets {
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/integration-test/kotlin')
		}
		resources.srcDir file('src/integration-test/resources')
	}
}

/// By extending the integration test compile and runtime, we can re-leverage all of the already defined test dependencies.
/// IMPORTANT: We need to extend the compile from "testImplementation" (Kotlin) instead of "testCompile" (Java).
configurations {
	integrationTestCompile.extendsFrom testImplementation
	integrationTestRuntime.extendsFrom testRuntime
}

/// Integration test dependencies can be added as "integrationTestImplementation" as needed.
dependencies {
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")

	runtimeOnly('org.postgresql:postgresql')

	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

/// Added to support Kotlin for integration tests.
compileIntegrationTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

/// New task created for executing integration tests.
task integrationTest(type: Test) {
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	outputs.upToDateWhen { false }
}

/// Output the results of tests as they are executed (command line).
test {
	testLogging {
		events "passed", "skipped", "failed"
	}
}

/// Output the results of tests as they are executed (command line).
integrationTest {
	testLogging {
		events "passed", "skipped", "failed"
	}
}
